{"ast":null,"code":"var _jsxFileName = \"/Users/me-mac/Desktop/Learning-react/expense-tracker/src/components/Chart/Chart.js\";\nimport React from 'react';\nimport ChartBar from './ChartBar';\nimport './Chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: dataPoint.value,\n      maxValue: totalMaximum,\n      label: dataPoint.label\n    }, dataPoint.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 42\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/me-mac/Desktop/Learning-react/expense-tracker/src/components/Chart/Chart.js"],"names":["React","ChartBar","Chart","props","dataPointValues","dataPoints","map","dataPoint","value","totalMaximum","Math","max","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;;AACA,MAAMC,KAAK,GAAGC,KAAK,IAAG;AAClB,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAIA,SAAS,CAACC,KAA5C,CAAxB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAArB;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACED,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,iBAAK,QAAC,QAAD;AAEpC,MAAA,KAAK,EAAEA,SAAS,CAACC,KAFmB;AAGpC,MAAA,QAAQ,EAAEC,YAH0B;AAIpC,MAAA,KAAK,EAAEF,SAAS,CAACK;AAJmB,OAC7BL,SAAS,CAACK,KADmB;AAAA;AAAA;AAAA;AAAA,YAAnC;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAWH,CAdD;;KAAMV,K;AAeN,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport ChartBar from './ChartBar';\nimport './Chart.css';    \nconst Chart = props =>{\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues);\n    return (\n    <div className=\"chart\"> \n     {props.dataPoints.map(dataPoint => (<ChartBar \n     key = {dataPoint.label}\n     value={dataPoint.value} \n     maxValue={totalMaximum} \n     label={dataPoint.label}\n     />\n     ))}\n    </div>\n    );\n};\nexport default Chart ;"]},"metadata":{},"sourceType":"module"}